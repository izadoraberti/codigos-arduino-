const int echoPin = 12; // Pino para receber o eco do pulso
const int trigPin = 13; // Pino para enviar o pulso do trigger
float distf;
int distancia = 0;
int ledPin[5] = {5,6,9,10,11},i,led;

void setup(){
 Serial.begin(9600); //conexão usb, não utlize os pinos digitais 0 e 1 qndo conectado pela usb
 pinMode(echoPin, INPUT); // define eco como entrada
 pinMode(trigPin, OUTPUT); //define trigger como saída
 pinMode(ledPin[0],OUTPUT);
 pinMode(ledPin[1],OUTPUT);
 pinMode(ledPin[2],OUTPUT);
 pinMode(ledPin[3],OUTPUT);
 pinMode(ledPin[4],OUTPUT);
}
void loop(){ //rotina
 
 digitalWrite(trigPin, LOW); // Seta trigger como baixo(0) por 2uS
 delayMicroseconds(2);
 digitalWrite(trigPin, HIGH); // coloca trigger em estado alto
 delayMicroseconds(10); // por 10uS, pode uasr tbm delay (1) que equivale a 10uS
 digitalWrite(trigPin, LOW); // coloca em estado baixo
 distf = pulseIn(echoPin, HIGH); //deixa eco em alto e retorna o tempo em milissegundos
 distf = distf/58; // Calcula a distância do pelo tempo do pulso
 Serial.println(distf);
 distancia = distf;
 if (distancia<32){
  if(distancia%2==1){
    digitalWrite(ledPin[0], HIGH);
  }else{
    digitalWrite(ledPin[0], LOW );
  }
  if(distancia%4>=2){
    digitalWrite(ledPin[1], HIGH);
  }else{
    digitalWrite(ledPin[1], LOW );
  }
  if(distancia%8>=4){
    digitalWrite(ledPin[2], HIGH);
  }else{
    digitalWrite(ledPin[2], LOW );
  }
  if(distancia%16>=8){
    digitalWrite(ledPin[3], HIGH);
  }else{
    digitalWrite(ledPin[3], LOW );
  }
  if(distancia%32>=16){
    digitalWrite(ledPin[4], HIGH);
  }else{
    digitalWrite(ledPin[4], LOW ); 
  }
}else{
  for(i=0;i<5;i++){
    digitalWrite(ledPin[i],LOW);
  }
    delay(300);
  for(led=0;led<5;led++){
    for(i=0;i<=255;i=i+5){
      analogWrite(ledPin[led], i);
      delay(30);
    }
  }
  for(led=4;led>=0;led--){
    for(i=255;i>=0;i=i-5){
      analogWrite(ledPin[led], i);
      delay(30);
    }
  }
}
delay(300);
}